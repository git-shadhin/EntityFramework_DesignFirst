//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntityFramework_DesignFirst.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EmployeeDBContext : DbContext
    {
        public EmployeeDBContext()
            : base("name=EmployeeDBContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
    
        public virtual ObjectResult<spGetDepartmentDetails_Result> spGetDepartmentDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetDepartmentDetails_Result>("spGetDepartmentDetails");
        }
    
        public virtual ObjectResult<spGetEmployeeDetails_Result> spGetEmployeeDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetEmployeeDetails_Result>("spGetEmployeeDetails");
        }
    
        public virtual int spInsertEmployeeDetails(string firstName, string lastName, string gender, Nullable<int> salary, Nullable<int> departmentId)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(int));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("departmentId", departmentId) :
                new ObjectParameter("departmentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertEmployeeDetails", firstNameParameter, lastNameParameter, genderParameter, salaryParameter, departmentIdParameter);
        }
    }
}
